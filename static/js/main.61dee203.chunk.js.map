{"version":3,"sources":["api/index.js","actions/index.js","App.js","reducers/index.js","store/index.js","index.js"],"names":["http","axios","create","baseURL","fetchUsers","dispatch","type","get","then","response","results","data","catch","App","this","props","onFetchUsers","console","log","users","className","PureComponent","connect","isloading","isError","combineReducers","isLoading","state","action","store","createStore","reducers","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEaA,E,OAAOC,EAAMC,OAAO,CAC/BC,QAAS,mCCsBEC,EAAa,kBAAM,SAAAC,GAC9BA,EAnBO,CACLC,KAN+B,wBDILN,EAAKO,IAAI,UCsBlCC,MAAK,SAAAC,GAAQ,OAAIJ,EATb,CACLC,KAhB+B,sBAiB/BI,QAO6CD,EAASE,MAAQ,QAC7DC,OAAM,kBAAMP,EAhBR,CACLC,KAX+B,6BCE7BO,E,kLAEFC,KAAKC,MAAMC,iB,+BAKX,OADAC,QAAQC,IAAI,QAASJ,KAAKC,MAAMI,OAE9B,yBAAKC,UAAU,OACb,mC,GATUC,iBAgCHC,eAVS,SAAC,GAAD,MAAkC,CACxDH,MADsB,EAAEA,MAExBI,UAFsB,EAASA,UAG/BC,QAHsB,EAAoBA,YAMjB,SAAAnB,GAAQ,MAAK,CACtCW,aAAc,kBAAMX,EAASD,SAGhBkB,CAA6CT,G,eCG7CY,cAAgB,CAC7BC,UAlCgB,WAA4B,IAA3BC,EAA0B,wDAAXC,EAAW,uCAC3C,OAAQA,EAAOtB,MACb,IFP+B,sBEQ7B,OAAO,EACT,IFR+B,sBES/B,IFR+B,sBES7B,OAAO,EACT,QACE,OAAOqB,IA2BXH,QAvBc,WAA4B,IAA3BG,EAA0B,wDAAXC,EAAW,uCACzC,OAAQA,EAAOtB,MACb,IFlB+B,sBEmB7B,OAAO,EACT,IFnB+B,sBEoB/B,IFtB+B,sBEuB7B,OAAO,EACT,QACE,OAAOqB,IAgBXR,MAZY,WAAyB,IAAxBQ,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOtB,MACb,IF7B+B,sBE8B7B,OAAOsB,EAAOlB,QAChB,QACE,OAAOiB,M,QCzBAE,EAAQC,YACnBC,EAPmB,CACnBL,WAAW,EACXF,SAAS,EACTL,MAAO,IAMPa,YAAgBC,IAAOC,W,MCLzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.61dee203.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: ' http://77.120.241.80:8911/api',\n});\n\nexport const getUsers = () => http.get('/users');\nexport const createUser = () => http.post('/users');\nexport const updateUser = id => http.put(`/user/${id}`);\nexport const deleteUser = id => http.delete(`/user/${id}`);\n","import {getUsers} from '../api';\n\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\n\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST,\n  };\n};\n\nexport const fetchUsersFailure = () => {\n  return {\n    type: FETCH_USERS_FAILURE,\n  };\n};\n\nexport const fetchUsersSuccess = results => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    results,\n  };\n};\n\nexport const fetchUsers = () => dispatch => {\n  dispatch(fetchUsersRequest());\n  getUsers()\n    .then(response => dispatch(fetchUsersSuccess(response.data || [])))\n    .catch(() => dispatch(fetchUsersFailure()));\n};\n","import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport T from 'prop-types';\nimport {fetchUsers} from './actions';\n\nclass App extends PureComponent {\n  componentDidMount() {\n    this.props.onFetchUsers();\n  }\n\n  render() {\n    console.log('users', this.props.users);\n    return (\n      <div className=\"App\">\n        <div></div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  onFetchUsers: T.func.isRequired,\n  users: T.array.isRequired,\n  isloading: T.bool,\n  isError: T.bool,\n};\n\nconst mapStateToProps = ({users, isloading, isError}) => ({\n  users,\n  isloading,\n  isError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchUsers: () => dispatch(fetchUsers()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\nimport {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_FAILURE,\n  FETCH_USERS_SUCCESS,\n} from '../actions';\n\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST:\n      return true;\n    case FETCH_USERS_FAILURE:\n    case FETCH_USERS_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isError = (state = false, action) => {\n  switch (action.type) {\n    case FETCH_USERS_FAILURE:\n      return true;\n    case FETCH_USERS_SUCCESS:\n    case FETCH_USERS_REQUEST:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return action.results;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isLoading,\n  isError,\n  users,\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport {logger} from 'redux-logger';\nimport reducers from '../reducers/index';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  isLoading: false,\n  isError: false,\n  users: [],\n};\n\nexport const store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk, logger)\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\nimport {store} from './store';\n\nimport './assets/scss/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}